#summary Как поднять аналог code.google.com на своем сервере для своего проекта

== Введение ==

Здесь описано, как поднимать Redmine. Все действия производились на свежеустановленной Ubuntu 11.10, что не должно сильно отличаться от установки под Ubuntu 10.04.

Для поднятия Redmine нам понадобятся:
  * Oдна из 3х поддерживаемых систем управления базами данных:
    # PostgreSQL 8
    # MySQL 5.0 (или выше)
    # SQLite 3
  * Ruby 1.8.7
  * RubyGems 1.6.2 (Rails 2.3.11 не совместимы с RubyGems 1.7.0 или выше)
  * Rails 2.3.11
  * Rack 1.1.1  
  * Rake 0.8.7 (Rake 0.9.x ещё не поддерживается в Rails)
  * Apache 2

В зависимости от системы детали устовки могут варьироваться.

== Установка СУБД ==

В качестве СУБД возьмём PostgreSQL.

{{{
sudo apt-get install postgresql-8.4
}}}

при установке нам покажут предупреждение, что существует более поздняя версия - 9.1, и что нам следует удалить старую, если мы захотим обновиться.

При этом создаётся новая роль входа в систему:

`login: postgres`

`paswd: postgres`

На этом установка СУБД закончилась :)

== Установка Ruby и RubyGems: ==

{{{
sudo apt-get install ruby1.8
}}}

Вот здесь есть один важный момент: в репозитории у нас лежит версия RubyGems 1.8, но для поледней версии Redmine необходимы Rails 2.3.11, а они несовместимы с RubyGems версии 1.7.0 или выше. Поэтому необходимо идти на официальный сайт RubyGems и скачивать более раннюю [http://rubyforge.org/frs/download.php/74445/rubygems-1.6.2.tgz версию]. Таковой является версия 1.6.2.

Скачиваем, распаковываем, переходим в корневую директорию rubygems-1.6.2 и выполняем

{{{
sudo ruby setup.rb
}}}

После чего нам сообщают, что исполняемый файл доступен по адресу: `/usr/bun/gem1.8`

== Устанвока Rails ==

{{{
sudo gem1.8 install rails -v=2.3.11
}}}

При этом будут проинсталлированы все зависимости:

{{{
Successfully installed rake-0.9.2.2
...
Successfully installed rack-1.1.2
...
Successfully installed rails-2.3.11
}}}

Замечаем, что он закачал нам rake более поздней версии, что нам необходимо, а мы помним, что Rake 0.9.x ещё не поддерживается в Rails, посмотрим, что будет дальше.

== Настройка базы данных ==

Создаём пустую БД для redmine, для этого переходим в консоль PostgreSQL:

{{{
sudo su postgres
psql
}}}

В консоли выполняем слеющие команды:

{{{
CREATE ROLE my_role LOGIN ENCRYPTED PASSWORD 'my_password' NOINHERIT VALID UNTIL 'infinity';
CREATE DATABASE redmine WITH ENCODING='UTF8' OWNER=my_role;
}}}

Эти команды создают роль для входа: `my_role` с паролем `my_password`. Затем создаётся БД `redmine` и пользователем этой БД назначается роль `my_role`, созданная предыдущей командой. Эта БД использутеся самим Redmine для хранения информации.

Выходим из консоли командой `\q`

== Настройка Redmine ==

Скачиваем последнюю версию Redmine из официального репозитория:

{{{
svn co http://redmine.rubyforge.org/svn/branches/1.2-stable redmine
}}}

Следующие действия выполняются из корневой директории Redmine.

Необходимо настроить конфигурацию Redmine для использования БД, в нашем случае необходимо отредактировать файл `config/database.yml`, чтобы он содержал следующие строки:

{{{
production:
  adapter: postgresql
  database: redmine
  host: localhost
  username: my_role
  password: my_password
  encoding: utf8
}}}


Здесь мы указываем, что хотим использовать СУБД PostgreSQL, название БД - redmine - ту, которую мы создали в предыдущем разделе, а также роль для входа и пароль, созданные в том же разделе. Дополнительно указываем кодировку - utf8.

Если файла `config/database.yml` нет, то необходимо его создать по образу и подобию файла `config/database.yml.example`.

Зтем необходимо выполнить:

{{{
rake generate_session_store
}}}

на что получим сообщение:

{{{
Missing the i18n 0.4.2 gem. Please `gem install -v=0.4.2 i18n`
}}}

Что означает, что необходимо выполнить:

{{{
sudo gem1.8 install -v=0.4.2 i18n && sudo rake generate_session_store
}}}

На что получим прежупреждения о запрещённых методах. команда выполнилась успешно, поэтому пока на них можно не обращать внимания.

Затем необходимо создать структуру БД командой:

{{{
sudo RAILS_ENV=production rake db:migrate
}}}

На что получим ошибку, что у нас не установлен адаптер для нашей СУБД:

{{{
rake aborted!
Please install the postgresql adapter: `gem install activerecord-postgresql-adapter` (no such file to load -- pg)
}}}

Устанавливаем адаптер:

{{{
sudo gem1.8 install postgres-pr
}}}

Хоть это совсем не то, что предлагает нам Rake, но именно это, а не `"gem install activerecord-postgresql-adapter"` обычно помогает при такой ошибке :)

Снова попытаемся выполнить команду:

{{{
sudo RAILS_ENV=production rake db:migrate
}}}

И замечаем, что rake создаёт нам структуру БД.

Теперь необходимо заполнить БД информацией по-умолчанию:

{{{
sudo RAILS_ENV=production rake redmine:load_default_data
}}}

В процессе будет предложено выбрать язык.

Теперь необходимо прописать разрешения доступа для юзера, из под которого предполагается запускать Redmine, наиболее вероятно, вам понадобится пользователь под которым вы сейчас находитесь:

{{{
sudo chown -R <user_name>:<user_name> files log tmp public/plugin_assets
sudo chmod -R 755 files log tmp public/plugin_assets
}}}

Теперь настала пора протестировать установку Redmine через эмулятор:

{{{
ruby script/server webrick -e production
}}}

при этом Redmine будет доступен по [http://127.0.0.1:3000 этому адресу]
Логин: admin
пароль: admin

Очень не рекомендуется ипользовать Redmine под этим эмулятором, поэтому необходимо настроть нормальный полноценный сервер, для чего мы будем использовать Apache.

== Установка и настройка Apache ==

Для установки Apache необходимо выполнить команду:

{{{
sudo apt-get install apache2
}}}

После установки он автоматически запустится, если этого не произшло, то поможет команда:

{{{
sudo /etc/init.d/apache2 start
}}}

Проверить его работоспособность можно перейдя по [http://127.0.0.1:80 этому адресу]

Теперь необходимо поставить специальный мод:

{{{
sudo apt-get install libapache2-mod-passenger
}}}

Создать символьную ссылку:

{{{
sudo ln -s /home/michael/redmine/public /var/www/redmine
}}}

Где `/home/michael/redmine/` - корневая директория Redmine

И, наконец, сконфигурировать Apache, для этого необходимо отредактировать файл `/etc/apache2/sites-avalible/default`, чтобы он выглядел примерно так:

{{{
<VirtualHost *:80>
....................
  <Directory "/var/www/redmine">
    RailsEnv production
    RailsBaseURI /redmine
  </Directory>
</VirtualHost>
}}}

Перезапускаем сервер:

{{{
sudo /etc/init.d/apache2 restart
}}}

Если видим что-то типа такого:

{{{
 * Restarting web server apache2
apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1 for ServerName
 ... waiting apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1 for ServerName
}}}

То необходимо отредактировать файл `/etc/apache2/httpd.conf`, добавив в него строчку

{{{
SrverName localhost
}}}

Тогда навязчивое сообщение о том, что Apache что-то не может сделать, исчезнет :)

Теперь  Redmine можно наблюдать по  [http://localhost:80/redmine этому адресу] 

Логин: admin
Пароль: admin

Заметили так же, что Rake более поздней версии пока не доставил нам никаких неприятностей. Однако в будущем, если будут какие-то проблемы, не будет лишним откатить его на более раннюю версию:

{{{
sudo gem1.8 install rake -v=0.8.7
sudo gem1.8 uninstall rake -v=0.9.2.2
}}}

== Альтернативный метод ==

После успешной установки СУБД в Ubuntu 11.10 можно воспользоваться автоматической установкой и настройкой Redmine:

{{{
sudo apt-get install redmine
}}}

После чего будет необходимо ответить на ряд вопросов:
  * Выбираем СУБД `psql`
  * Пароль для БД `redmine`

После этого получим ошибку, что не установлен драйвер. Устанавливаем и перезапускаем настройку:

{{{
sudo apt-get install redmine-pgsql
sudo dpkg-reconfigure -plow redmine
}}}

Отвечаем на вопросы:
  * Редактируем экземпляр Redmine под названием `default`
  * На вопрос о переустановке БД отвечаем `Да`
  * Метод подключения `сокет/Unix`
  * Оба метода аутентификации `ident`
  * Имя пользователя для доступа к PostgreSQL: `postgres`
  * Имя владельца БД: `redmine`
  * Название базы данных Redmine: `redmine_default`

Возможно появится сообщение, что необходим установленный пакет postgresql, но мы помним, что он уже установлен, поэтому можем смело игнорировать это предупреждение: `ignore`

Далее необходимо выполнить указания раздела "Установка и настройка Apache" с одним исключением: установка произошла в директорию `/usr/share/redmine`, а это значит, что символьную ссылку следует сделать на директорию `/usr/share/redmine/public`

{{{
sudo ln -s /usr/share/redmine/public /var/www/redmine
}}}