#summary Что нужно сделать для зачёта в осеннем семестре

= Что нужно сделать для зачёта в осеннем семестре =

Основной (TDD) сценарий:
  # Подготовка
    * Придумать какую-нибудь несложную, но интересную задачу,
    * Согласовать формулировку,
    * Создать svn клиент нашего проекта, научиться компилировать код и запускать тесты - см. [http://code.google.com/p/mipt-course/wiki/Building инструкцию]
  # Работа
    * Написать и согласовать use-cases для своей задачи
    * Написать `DISABLED_` тесты и *потом* интерфейс для классов, решающих основной/самый-простой use-case задачи.
    * Если интерфейсов несколько - рекомендуется также подготовить mock'и, чтобы можно было реализовывать интерфейсы независимо.
    * Пройти [http://code.google.com/p/mipt-course/wiki/CodeReview code review], сделать commit тестов и интерфейсов,
    * Для каждого интерфейса:
      * Реализовать интерфейс в той степени, чтобы прошёл один новый тест; удалить префикс `DISABLED_`.
      * Пройти code review, сделать commit.
      * Повторить для ещё одного теста. Если его нет - написать :-)
    * Если интерфейсов несколько - написать тесты, которые показывают что модули могут работать совместно :-)
    * Повторить вышеописанные шаги поочерёдно для остальных use-cases.
  # Оценка
    * Ответить на пару простых вопросов в личной беседе,
    * Не забыть зачётку!
    * Получить зачёт

Альтернативные сценарии (writing tests after code, etc) - пишите, обсудим.
Но лучше основной.

==Примеры задач==
  * Написать контейнер или классический алгоритм на графах
  * Доделать [http://code.google.com/p/mipt-course/source/detail?r=169 ReliableUdpChannel]
  * Простые игры: шашки, судоку, пятнашки, ...
  * Разбор и вычисление математических выражений
  * FFT
  * Регулярные выражения (см. [http://code.google.com/p/mipt-course/source/browse/trunk/sandbox/pattern_test.cpp sandbox/pattern_test.cpp])
  * In-memory/file SQL-like database
  * Сжатие данных (текстовых, графических, звуковых, и т.д.)
  * <Место для вашей рекламы>

==Рекомендации==
Для написания кода создайте в папке `sandbox/` необходимые файлы.<br>
Рекомендуется создать три файла: `.h`, `.cpp` и `_test.cpp` - например, `sandbox/fft.h`, `sandbox/fft.cpp`, `sandbox/fft_test.cpp`.<br>Можно обойтись без `.h` и `.cpp` файла.

*Помните: чем раньше начнёте, тем меньше времени займёт review*