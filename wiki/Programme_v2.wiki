#summary Программа курса (версия 2011)

=Программа курса (версия 2011)=
==Осенний семестр==
  * Цель курса, основные темы 
  * Краткое знакомство с централизированными системами контроля версий (Source Control), работа с основными командами `svn` (Subversion)
  * Утилиты `diff`, `diffmerge`, `patch`
  * Важность оформления кода, рекомендаци по оформлении кода Google C++ Code Style Guide
  * Комментарии TODO, FIXME
  * Макросы `assert`, `CHECK`
  * RAII
  * Базовые правила деловой переписки по e-mail
  * Понятие Code Review, система `rietveld`, утилита `upload.py`
  * Системы сборки для проектов на C++: `Makefile`, `CMake`
  * Open Source лицензии: `BSD`, `GPL`, `LGPL`
  * Issue trackers; грамотное написание bug-report'ов. Redmine.
  * Тестирование на примере `googletest` и Python `unittest`, Test Driven Development (TDD)
  * Code coverage
  * Средства автоматического тестирования: `buildbot`, `valgrind`
  * Тестирование сложных архитектур. Dependency injection; mock- и fake-объекты.
  * Логгирование
  * Проблемы коллективного решения, brainstorming идей проектов на второй семестр

По ходу первого семестра также происходит краткое знакомство с языком Python

Для зачёта студентам необходимо пройти цикл из нескольких code review, в которых затронуты основные темы, обсуждаемые на лекциях и загрузить (`commit`) свои правки в общий репозиторий.

==Весенний семестр==
Основаная идея второго семестра - собрать несколько команд студентов, каждая из которых занимается своим "проектом".

Каждая команда должна наладить себе процесс разработки (рассылку, репозиторий, тикеты, тестирование, правила code review, и т.д.) и в конце семестра представить налаженный процесс командной разработки и альфа-версию проекта.<br>Для команд есть специальная [http://code.google.com/p/mipt-course/wiki/ProjectsConventions wiki] с рекомендациями что как делать и в каком примерно порядке.

Темы, рассказываемые на лекциях, подбираются под текущее состояние проектов:
  * Цели, мотивация, постановка задач, планирование, приоритизация, немного про time management
  * Организация общего "рабочего пространства" в интернете: wiki, дизайн документы, и т.д.
  * Профилирование, оптимизация; анализ обратной связи от пользователей
  * Немного о team management. Agile, Scrum
  * Ведение релизов
  * Участие в Open Source проектах

Также, на занятиях проходят консультации по текущему состоянию проектов.

В конце семестра организуется [http://code.google.com/p/mipt-course/wiki/FinalPresentations презентация проектов в офисе Google].

Бонус-темы:
  * git, branches, ведение релизов
  * Google Summer of Code