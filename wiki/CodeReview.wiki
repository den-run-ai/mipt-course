#summary Как правильно подготовить свой патч для код-ревью и закоммитить

= Лекция о Code Review =
В общих чертах данная тема была освещена на лекции №3
http://groups.google.com/group/mipt-google-course/browse_thread/thread/c4d218f01eaa8f84

= Процесс шаг-за-шагом =
(две роли - Автор патча и Ревьювер)
  * Автор патча - делает в SVN клиенте нужные изменения, в том числе `svn add/rm` на новые/удаляемые файлы.
  * Автор создаёт issue для код-ревью
  {{{
  upload.py <список всех изменённых файлов>
  }}}
  Скрипт распечатает ссылку на issue, например http://codereview.appspot.com/1234567.

  upload.py можно скачать тут: http://code.google.com/p/rietveld/wiki/UploadPyUsage
  * Автор открывает issue, нажимает "*Publish+Mail Comments*" (m)
  Туда добавляется e-mail Ревьювера, пишет просьбу сделать review в поле Message и нажимает "Publish All My Drafts" - Ревьюверу придёт письмо. 
  // *TODO(timurrrr): кого добавлять в cc*
  * Ревьювер, получив письмо, пишет комментарии к патчу и таким же образом (Publish All My Drafts) посылает письмо Автору патча с просьбой исправить то-то и то-то.
  * Автор патча исправляет найденные ошибки и посылает обновлённый патч командой
  {{{
  upload.py <список всех изменённых файлов> -i 1234567 # Важно указать номер review issue!
  }}}
  * Автор патча отвечает на комментарии Ревьювера и посылает их (Publish All My Drafts)
  * Ревьювер снова получает письмо, пишет комментарии и т.д. - до тех пор пока патч всех не устравивает
  ...
  * Когда Ревьювера всё устраивает - он говорит LGTM.
  * Автор может отправить патч в репозиторий командой
  {{{
  svn commit <тот же список изменённых файлов> -m "<Название review issue>. Reviewed at http://codereview.appspot.com/1234567"
  }}}
  или
  {{{
  svn commit <тот же список изменённых файлов>
  # и указать
  # <Название review issue>. Reviewed at http://codereview.appspot.com/1234567
  # в сообщении коммита через SVN_EDITOR
  }}}  
  * Если патч как-то связан с каким-либо bug issue - напишите соответствующий комментарий в bug issue.
  Например, _"ошибка исправлена в ревизии r10", "фича сделана в r5"_ и т.п.
  * Автор может "закрыть" review issue:
  Edit issue (http://codereview.appspot.com/1234567/edit) -> поставить галочку Closed -> Update Issue.
  * Настоятельно рекомендуется не удалять review issues - пусть для всех коммитов сохранится история что-кто-кому-писал при review.

= Общие рекомендации =
  * Маленький патч - быстрый ревью,
  * Чем меньше надо проверять ревьюверу - тем быстрее ревью,
  * Используйте [http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml#cpplint cpplint.py] перед отправкой патча на ревью для проверки Code Style - экономьте время Ревьювера!