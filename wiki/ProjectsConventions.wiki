#summary Договорённости и рекомендации по ведению проектов в рамках курса

== Мы договорились ==
  * Генерим на каждом занятии 1+ "проект+команду" до тех пор пока все не распределились по проектам.
  * 1 марта: половина людей должны распределиться по командам 
  * 1 апреля: демо основных use-cases 
  * 1 апреля: участники команд начинают [http://en.wikipedia.org/wiki/Eating_your_own_dog_food dogfood] чужих проектов 
  * 1 мая: редлайн, осталось только полировать и поддерживать 


== Рекомендации ==

У каждого проекта *необходимо иметь в первую очередь*:
  * *Ответственное лицо проекта, он же "лидер проекта"*
  * *Краткая формулировка идеи проекта (1-2 предложения)*
  * *Список рассылки с общеизвестным адресом (например, google group'а)*
  * *Участники проекта должны быть подписаны на эту рассылку*

Вообще *необходимо иметь*:
  * *Создать открытый source control на SVN и отправить на рассылку URL, где вы будете хранить исходный код.*<br>(можно git, но пока не рекомендуется)<br>У код-хостинга желательно наличие wiki-движка для хранения общей информации.<br>На главной странице хостинга дать веб-адрес рассылки.<br>Дать мне права на комментирование в проекте.<br>Настроить автоматическую отправку писем о действиях с репозиторием в вашу группу рассылки.

  * *Завести issue/bug tracker*<br>(желательно чтобы он предоставлялся тем же хостингом)<br>Настроить автоматическую отправку писем о действиях с issues в вашу группу рассылки.

  * С этого момента - *активно пользоваться tracker'ом*!<br>Придумали подзадачу - завели issue; нашли багу - завели issue, и т.п.<br>Прочитали пункт списка ниже - завели issue :)

  * *Создать в формате wiki/google docs [http://en.wikipedia.org/wiki/Design_document дизайн-документ].*<br>В нём вы должны поддерживать feature list вашего проекта (цели),<br> а также подробное описание нетривиальных частей вашего проекта (тех, что "без полбутылки не разберёшься").<br>Желательно создать в нём раздел "используемые сторонние библиотеки и API" со ссылками на соответствующую документацию.<br>Необходимо дать права на редактирование этих документов всем членам команды и мне.

  * *Выбрать лицензию для вашего проекта* (BSD или GPL, лучше первую)<br>Создать шаблон шапки лицензии для простого добавления в ваши исходники в будущем.<br>За основу BSD лицензии можно взять лицензию нашего общего репозитория.<br/>Замечание: если вы собираетесь использовать код каких-то чужих open source библиотек, то
    * убедитесь, что лиценизия вашего проекта совместима с лицензией библиотеки 
    * кладите его в подпапку third_party 

  * *Договориться о правилах кодревью.*<br>Допускается формулировка "как в прошлом семестре" :)<br>Если есть отличия - задокументировать на вашей wiki.<br>*Обязательно ставить адрес вашей рассылки в `cc` к ревью!*

  * *Написать wiki-страницу "как собрать и запустить проект"*<br>(включающий описание "где достать и как собирать необходимые сторонние компоненты),<br>дать на неё ссылку в README файле.<br>Постоянно поддерживать её в актуальном состоянии!

  * *Начиная с середины семестра, на каждом занятии - демо!*<br>Надо носить с собой устройство (ноутбук, планшет, телефон), на котором установлена свежая сборка проекта из `trunk`,<br>чтобы при необходимости показывать "демо". На первых порах устроит нулевое количество фич ("Hello, world"),<br>но затем это количество должно монотонно возрастать :)

*Очень желательно*:
  * *Организовать автоматическое тестирование.*<br>Это необязательно googletest/python unittest, для некоторых задач вполне подойдут например bash скрипты.<br>Написать wiki-страницу "как запускать тесты".
 
  * *Настроить buildbot.*<br>Включить отправку сообщений о buildbot errors на адрес рассылки.<br>Если надо, могу помочь запустить buildslave на нашем buildbot'е с прошлого семестра.

*To be amended*